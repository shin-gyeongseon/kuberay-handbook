site_name: kuberay-handbook
site_url: https://shin-gyeongseon.github.io/kuberay-handbook/
repo_url: https://github.com/shin-gyeongseon/kuberay-handbook/
theme:
  name: material
  language: en
  features:
    - toggle
  palette:
    - scheme: default
      toggle:
        icon: material/brightness-7 
        name: Switch to dark mode
    - scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode

nav:
  - Home: index.md
  - 1. 서론 (Introduction):
    - 1.1 Ray가 왜 필요한가?: intro/why-ray.md
    - 1.2 Ray Cluster 학습 목표와 문서 활용 방법: intro/learning-objectives.md
  - 2. Ray 기초 다지기 (Fundamentals):
    - 2.1 Ray 아키텍처 한눈에 보기: fundamentals/architecture-overview.md
    - 2.2 분산 개념: fundamentals/concepts.md
    - 2.3 Ray Runtime 핵심 서비스: fundamentals/runtime-services.md
  - 3. Ray Service 패밀리 이해:
    - 3.1 Ray Cluster ― 헤드 노드·워커 노드 구조: services/cluster.md
    - 3.2 Ray Serve ― 모델·API 서빙용 프레임워크: services/serve.md
    - 3.3 Ray Job ― 배치·실험 워크로드 제출: services/job.md
    - 3.4 Ray Workflow / Ray Data: services/workflow-data.md
  - 4. KubeRay로 옮겨오기 (Operator Overview):
    - 4.1 KubeRay 개요와 장점: kuberay/overview.md
    - 4.2 KubeRay 아키텍처: kuberay/architecture.md
    - 4.3 RayCluster CRD 세부 필드: kuberay/raycluster-crd.md
    - 4.4 RayService CRD: kuberay/rayservice-crd.md
    - 4.5 RayJob CRD: kuberay/rayjob-crd.md
  - 5. Hands-on KubeRay 실습:
    - 5.1 Helm으로 KubeRay 설치: hands-on/install-helm.md
    - 5.2 최초 RayCluster 배포: hands-on/first-cluster.md
    - 5.3 RayService로 온라인 서빙 전환: hands-on/rayservice.md
    - 5.4 RayJob으로 분산 학습 실행: hands-on/rayjob.md
    - 5.5 Autoscaler/HPA 연동: hands-on/autoscaler-hpa.md
  - 6. KubeRay GCS 및 클러스터 관리:
      - 6.1 GCS Fault Tolerance Configurations 요약: gcs/gcs-fault-tolerance-summary.md
      - 6.2 Ray 서비스 종료 시 Redis GCS 사용 경우 Finalizer에 의한 종료 과정 메카니즘: gcs/gcs-finalizer-mechanism.md
      - 6.3 Ray Cluster를 온전히 삭제하기 위한 방법: gcs/cluster-deletion.md
  # - 6. 운영 & 모니터링:
  #   - 6.1 Ray Dashboard 사용법: operations/dashboard.md
  #   - 6.2 Prometheus + Grafana 지표 수집: operations/metrics.md
  #   - 6.3 로그 & Trace 연동: operations/logging-tracing.md
  #   - 6.4 장애 시나리오 & 대응 패턴: operations/troubleshooting.md
  # - 7. 심화 주제:
  #   - 7.1 멀티테넌시: advanced/multitenancy.md
  #   - 7.2 GPU 워크로드 스케줄링: advanced/gpu-scheduling.md
  #   - 7.3 Ray Serve CI/CD 파이프라인: advanced/cicd.md
  #   - 7.4 KubeRay 소스 분석: advanced/kubray-source.md
  # - 8. 결론 & 다음 단계:
  #   - 8.1 학습 로드맵 정리: conclusion/roadmap.md
  #   - 8.2 추천 레퍼런스 & 커뮤니티: conclusion/references.md

extra_javascript:
  - https://unpkg.com/mermaid@10.9.1/dist/mermaid.min.js
  - js/mermaid-init.js

markdown_extensions:
  - admonition
  - codehilite
  - pymdownx.details
  - toc:
      permalink: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format